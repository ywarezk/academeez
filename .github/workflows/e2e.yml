# 
# Vercel bot will build a preview environment for each pull request.
# This workflow will run E2E tests against that preview environment.
# E2E run is connected to sha
#
# Created August 16th, 2025
# @author: ywarezk
# @license: MIT
# 

name: End to End Tests
 
on:  
  repository_dispatch:
    types:
      - 'vercel.deployment.success'
  workflow_dispatch:
    inputs:
      ref:
        description: 'The branch, tag or SHA to checkout'
        required: true
jobs:
  run-e2es:    
    if: github.event_name == 'repository_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Determine ref
        id: determine-ref
        shell: bash
        run: |
          # Determine the ref to checkout
          # If a ref is explicitly provided, use it
          if [[ -n "${{ inputs.ref }}" ]]; then
            echo "Using provided ref: ${{ inputs.ref }}"
            echo "ref=${{ inputs.ref }}" >> "$GITHUB_OUTPUT"
          # If the event is a repository_dispatch and the client_payload contains a SHA, use it
          elif [[ "${{ github.event_name }}" == "repository_dispatch" && -n "${{ github.event.client_payload.git.sha }}" ]]; then
            echo "Using client_payload SHA: ${{ github.event.client_payload.git.sha }}"
            echo "ref=${{ github.event.client_payload.git.sha }}" >> "$GITHUB_OUTPUT"
          else
            echo "No ref throw exception"
            exit 1
          fi        
          
      - uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b
        id: app-token
        with:
          app-id: ${{ vars.ACADEMEEZ_APP_ID }}
          private-key: ${{ secrets.ACADEMEEZ_APP_PRIVATE_KEY }}
          
      - name: E2E check
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
        id: e2e-check
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const response = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: `E2E`,
              head_sha: ${{ steps.determine-ref.outputs.ref }},
              status: 'in_progress',
              started_at: new Date().toISOString(),
            });
            console.log('response is:', response.data);
            return response.data.id;

      
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          ref: ${{ steps.determine-ref.outputs.ref }}
          fetch-depth: 1
    
      
      - run: echo "Running E2E tests against the preview environment ${{ github.event.client_payload.url }}"      
      
      
      - name: Update deploy check on fail
        if: (failure() || cancelled()) && steps.e2e-check.outputs.result != ''
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |            
            github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: ${{ steps.e2e-check.outputs.result }},
              conclusion: 'failure',
              status: 'completed',
            });